#!/bin/bash
# This script's framework was created using makescript 
# version v0.14.7, dated 2018-11-12
# Makescript and its accompanying scripts are copyrighted
# by Aetesaki (c) 2018
# 
# archive (c) 2018 aetesaki
#
# ##################################################
# HISTORY:
# ##################################################
#
# * 2018-11-17 - v0.0.0  - First Creation
# * 2018-11-17 - v1.0.0  - First release
# * 2018-11-17 - v1.1.0  - Added empty check
# * 2018-11-17 - v1.2.0  - Added date format check
# * 2018-11-17 - v1.3.0  - Added check for future date
# * 2018-11-17 - v1.3.1  - added help note on date format
#
# ##################################################
# Initializing constants and variables
# ##################################################
# Setting constants
version="v1.3.1"            # Sets version variable
lastEdited="2018-11-17"     # Sets last edited variable" $scriptNamePath
# Declaring variables
# Declare all variables to be used in the script 
declare lastModifiedDate
declare cutoffDate=$1
declare destination=$2
# ##################################################
# short help function
# ##################################################
shorthelp() {
    # Edit as required
    echo "Usage: archive date destination
       archive --help
       archive --version"
}
# ##################################################
# -- help
# ##################################################
if [ "$1" == "--help" ]; then
    shorthelp
    # Write options and explanations
    echo "
   --help                 Displays this text and exit.
   --version              Displays the version of the script and exit."
    # Write information on arguments afterwards
    echo "
    This script will move all files in current directory, which hasn't been 
    modified since before date to destination.
    Destination must be a valid directory.

    NOTE: Date must be in international format: YYYY-MM-DD."
    # Write examples as required
    echo "
    archive 2016-1-1 FolderB
    will move all files older than 1 January 2016 to FolderB."
    exit 0
fi 
# ##################################################
# -- version
# ##################################################
if [ "$1" == "--version" ]; then
    echo "archive ${version}, dated ${lastEdited}
(c) 2018 aetesaki"
    exit 0
fi
# ##################################################
# no arguments gives short help
# ##################################################
if [ "$#" == "0" ]; then
    shorthelp
    exit 1
fi 
# ##################################################
# Main section
# ##################################################
# if destination is not a directory
if [ ! -d $destination ]; then
    # exit with error
    echo "ERROR: $destination is not a directory."
    exit 1
fi

# get year, month and date from cutoffDate
y=$( echo $cutofDate | cut -d"-" -f1 )
m=$( echo $cutofDate | cut -d"-" -f2 )
d=$( echo $cutofDate | cut -d"-" -f3 )
# If cutoffDate is not a date
if [ ! date -d "$y-$m-$d" &> /dev/null ]; then
    # exit with error
    echo "ERROR: $cutoffDate is not a date."
    exit 1
fi

# if cutoffDate is in the future
if [[ "$cutoffDate" > $( date -I ) ]]; then
    # exit with error
    echo "ERROR: $cutoffDate is a future date."
    exit 1
fi

# For each file in directiory
for file in * ; do
    # if file is not a directory
    if [ ! -d $file ]; then
        # get the last modify date
        lastModifiedDate=$( stat $file | grep Modify | cut -d" " -f2 )
        # if lastModifiedDate older than cutoffDate
        if [[ "$lastModifiedDate" < "$cutoffDate" ]]; then
            # move file to destination
            #echo "mv $file $destination" #DEBUG
            mv $file $destination 
        fi
    fi
done
    
